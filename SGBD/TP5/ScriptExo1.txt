REM Exercice 1

SET LINESIZE 150
CLEAR SCREEN


drop table posteclient cascade constraint purge;
drop table posteserveur cascade constraint purge;

create table posteclient(
        noserie integer not null,
	typeordi varchar(15) not null,
	dateachat date not  null,
        adrIp varchar(15) not null,
	masque varchar(15) not null,
        primary key (noserie));

create table posteserveur(
        noserie integer not null,
	typeordi varchar(15) not null,
	dateachat date not  null,
        nomserveur varchar(15) not null,
	typedisque varchar(10),
        primary key (noserie));


insert into posteclient(noserie, typeordi,dateachat, adrIP, masque) values (1, 'Mac','12/01/2014','127.168.1.1','255.255.0.0');
insert into posteclient(noserie, typeordi,dateachat, adrIP, masque) values (2, 'HP','15/04/2014','127.143.1.2','255.255.0.0');

insert into posteserveur(noserie, typeordi,dateachat, nomserveur, typedisque) values (3, 'HP','12/07/2014', 'zeus','CSS');

PROMPT table posteclient
select * from posteclient;

PROMPT table posteserveur
select * from posteserveur;


PROMPT ** Création du trigger de partition. Partie 1

CREATE OR REPLACE TRIGGER T_PARTITION_CLIENT
BEFORE iNSERT ON POSTECLIENT
FOR EACH ROW
DECLARE
ErreurPartition EXCEPTION;
var INT;
BEGIN

SELECT noserie into var FROM posteserveur WHERE noserie = :NEW.noserie;
RAISE ErreurPartition;
EXCEPTION
WHEN NO_DATA_FOUND THEN
NULL;
WHEN ErreurPartition THEN
RAISE_APPLICATION_ERROR(-20001, 'Erreur : ce numéro existe déjà dans la table SERVEUR');
END;
/
show err

PROMPT ** Création du trigger de partition. Partie 2

CREATE OR REPLACE TRIGGER T_PARTITION_SERVEUR
BEFORE iNSERT ON POSTESERVEUR
FOR EACH ROW
DECLARE
ErreurPartition EXCEPTION;
var INT;
BEGIN

SELECT noserie into var FROM posteclient WHERE noserie = :NEW.noserie;
RAISE ErreurPartition;
EXCEPTION
WHEN NO_DATA_FOUND THEN
NULL;
WHEN ErreurPartition THEN
RAISE_APPLICATION_ERROR(-20001, 'Erreur : ce numéro existe déjà dans la table CLIENT');
END;
/
show err