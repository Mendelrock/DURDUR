REM ********************************************************
REM EXERCICE 1
REM Auteur : FESSY Jérôme
REM ********************************************************

SET LINESIZE 150
CLEAR SCREEN

DROP TABLE MORCEAU CASCADE CONSTRAINTS PURGE;
DROP TABLE INTERPRETE CASCADE CONSTRAINTS PURGE;
DROP TABLE INTERPRETATION CASCADE CONSTRAINTS PURGE;


REM ****** Création des Tables *******

CREATE TABLE MORCEAU
(
IdMorceau INTEGER, Titre VARCHAR2(15), 
CONSTRAINT PK_MORCEAU PRIMARY KEY (IdMorceau)
);

CREATE TABLE INTERPRETE
(
IdInter INTEGER,nom VARCHAR2(15), CachetTotal NUMBER(10,2) DEFAULT 0,NombreInter INTEGER DEFAULT 0,
CONSTRAINT PK_INTERPRETE PRIMARY KEY (IdInter)
);


CREATE TABLE INTERPRETATION
(IdMorceau INTEGER, IdInter INTEGER, Cachet NUMBER(10,2),
CONSTRAINT PK_INTERPRETATION PRIMARY KEY (IdMorceau, IdInter)
);


ALTER TABLE INTERPRETATION
ADD CONSTRAINT FK_INTER_INTER FOREIGN KEY(IdInter) REFERENCES INTERPRETE(IdInter)
ADD CONSTRAINT FK_INTER_MORCEAU FOREIGN KEY(IdMorceau) REFERENCES MORCEAU(IdMorceau);

REM *** TRIGGER T_MAJ_CACHET
CREATE OR REPLACE TRIGGER T_MAJ_CACHET
AFTER INSERT OR DELETE OR UPDATE ON INTERPRETATION
FOR EACH ROW
BEGIN

IF INSERTING THEN
UPDATE interprete SET cachettotal = cachettotal + :new.cachet , NombreInter = NombreInter + 1 WHERE idinter=:new.idinter;
ELSIF DELETING THEN
UPDATE interprete SET cachettotal = (cachettotal- :old.cachet) , NombreInter = NombreInter - 1 WHERE idinter=:old.idinter;
ELSIF UPDATING THEN
UPDATE interprete SET cachettotal = cachettotal - :old.cachet + :new.cachet WHERE idinter=:new.idinter;
END IF;
END;
/
show err

INSERT INTO Morceau (idmorceau, titre) VALUES (1, 'La Belle Vie');
INSERT INTO Morceau (idmorceau, titre) VALUES (2, 'Yeux Bleus');
INSERT INTO Morceau (idmorceau, titre) VALUES (3, 'Coucou Je Vis');


INSERT INTO INTERPRETE (idinter, nom) VALUES (1, 'Goldman');
INSERT INTO INTERPRETE (idinter, nom) VALUES (2, 'Taryu');

INSERT INTO INTERPRETATION (idmorceau, idinter, cachet) VALUES (1, 1, 0);
INSERT INTO INTERPRETATION (idmorceau, idinter, cachet) VALUES (3, 2, 0);

COMMIT;




PROMPT Table morceau
select * from morceau;

PROMPT Table interprete
select * from interprete;

PROMPT table interpretation
select * from interpretation;